Local Development 
-----------------

This file will be packaged with your application, when using `play dist`.

=======
Setup the environment:

    export TWITTER_AUTH_KEY="---YOUR-KEY---"
    export TWITTER_AUTH_SECRET="---YOUR-SECRET---"
    export TWITTER_BEARER_TOKEN="---YOUR-BEARER-TOKEN---"
    export GOOGLE_CLIENT_ID="---YOUR-ID---"
    export GOOGLE_CLIENT_SECRET="---YOUR-SECRET---"
    export GOOGLE_API_KEY="---YOUR-API-KEY---"
    export GITHUB_CLIENT_ID="---YOUR-ID---"
    export GITHUB_CLIENT_SECRET="---YOUR-SECRET---"
    export LINKEDIN_CLIENT_ID="---YOUR-ID---"
    export LINKEDIN_CLIENT_SECRET="---YOUR-SECRET---"

Run:

    play ~run


# Production Operation Info (GKE)

Deployment is via Google Kubernetes Engine.

### Docker image and deploying

We use the sbt-native plugin to produce a docker image.

`> sbt docker:publishLocal`

**Note**: This defaults to stage (which is not set up currently) - prod should be done from CI, but if really wanted you can set the repository override via an environment variable `export DOCKER_REPOSITORY=registry.pro-us-east-1.openshift.com/reactivemanifesto-website`

Once you have a docker image you can upload it to cloudsmith.  There are a number of ways to do this, so you may need to check your documentation.

Currently that mechanism is to deploy the local image to Lightbend's internal repo.  You will need to make sure that you have access and will require both the username and password (or contact internal-it@lightbend.com).

Then push:

`docker push docker.cloudsmith.io/lightbend/internal-registry/website-manifesto:latest`

### GKE Setup

In case it needs re-built, the YAML files are in the deploy folder and the secrets in 1Password

